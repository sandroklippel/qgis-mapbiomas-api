# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/qgis-mapbiomas-api.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_DockMapBiomasApi(object):
    def setupUi(self, DockMapBiomasApi):
        DockMapBiomasApi.setObjectName("DockMapBiomasApi")
        DockMapBiomasApi.setEnabled(True)
        DockMapBiomasApi.resize(300, 337)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(DockMapBiomasApi.sizePolicy().hasHeightForWidth())
        DockMapBiomasApi.setSizePolicy(sizePolicy)
        DockMapBiomasApi.setMinimumSize(QtCore.QSize(200, 292))
        DockMapBiomasApi.setMaximumSize(QtCore.QSize(350, 524287))
        DockMapBiomasApi.setFloating(True)
        DockMapBiomasApi.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.dockWidgetContents = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dockWidgetContents.sizePolicy().hasHeightForWidth())
        self.dockWidgetContents.setSizePolicy(sizePolicy)
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.options = QtWidgets.QScrollArea(self.dockWidgetContents)
        self.options.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.options.sizePolicy().hasHeightForWidth())
        self.options.setSizePolicy(sizePolicy)
        self.options.setFrameShape(QtWidgets.QFrame.Panel)
        self.options.setWidgetResizable(True)
        self.options.setObjectName("options")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 280, 221))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollAreaWidgetContents.sizePolicy().hasHeightForWidth())
        self.scrollAreaWidgetContents.setSizePolicy(sizePolicy)
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout.setObjectName("verticalLayout")
        self.BIOME = gui.QgsCheckableComboBox(self.scrollAreaWidgetContents)
        self.BIOME.setObjectName("BIOME")
        self.verticalLayout.addWidget(self.BIOME)
        self.STATE = gui.QgsCheckableComboBox(self.scrollAreaWidgetContents)
        self.STATE.setObjectName("STATE")
        self.verticalLayout.addWidget(self.STATE)
        self.frame = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout = QtWidgets.QGridLayout(self.frame)
        self.gridLayout.setObjectName("gridLayout")
        self.startDetectedAt = QtWidgets.QDateEdit(self.frame)
        self.startDetectedAt.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.startDetectedAt.sizePolicy().hasHeightForWidth())
        self.startDetectedAt.setSizePolicy(sizePolicy)
        self.startDetectedAt.setDateTime(QtCore.QDateTime(QtCore.QDate(2018, 11, 1), QtCore.QTime(0, 0, 0)))
        self.startDetectedAt.setCalendarPopup(True)
        self.startDetectedAt.setObjectName("startDetectedAt")
        self.gridLayout.addWidget(self.startDetectedAt, 0, 1, 1, 1)
        self.endDetectedAt = QtWidgets.QDateEdit(self.frame)
        self.endDetectedAt.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.endDetectedAt.sizePolicy().hasHeightForWidth())
        self.endDetectedAt.setSizePolicy(sizePolicy)
        self.endDetectedAt.setCalendarPopup(True)
        self.endDetectedAt.setObjectName("endDetectedAt")
        self.gridLayout.addWidget(self.endDetectedAt, 1, 1, 1, 1)
        self.checkBoxEndDetected = QtWidgets.QCheckBox(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBoxEndDetected.sizePolicy().hasHeightForWidth())
        self.checkBoxEndDetected.setSizePolicy(sizePolicy)
        self.checkBoxEndDetected.setObjectName("checkBoxEndDetected")
        self.gridLayout.addWidget(self.checkBoxEndDetected, 1, 0, 1, 1)
        self.checkBoxEndPublished = QtWidgets.QCheckBox(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBoxEndPublished.sizePolicy().hasHeightForWidth())
        self.checkBoxEndPublished.setSizePolicy(sizePolicy)
        self.checkBoxEndPublished.setObjectName("checkBoxEndPublished")
        self.gridLayout.addWidget(self.checkBoxEndPublished, 3, 0, 1, 1)
        self.checkBoxStartDetected = QtWidgets.QCheckBox(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBoxStartDetected.sizePolicy().hasHeightForWidth())
        self.checkBoxStartDetected.setSizePolicy(sizePolicy)
        self.checkBoxStartDetected.setObjectName("checkBoxStartDetected")
        self.gridLayout.addWidget(self.checkBoxStartDetected, 0, 0, 1, 1)
        self.checkBoxStartPublished = QtWidgets.QCheckBox(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBoxStartPublished.sizePolicy().hasHeightForWidth())
        self.checkBoxStartPublished.setSizePolicy(sizePolicy)
        self.checkBoxStartPublished.setObjectName("checkBoxStartPublished")
        self.gridLayout.addWidget(self.checkBoxStartPublished, 2, 0, 1, 1)
        self.startPublishedAt = QtWidgets.QDateEdit(self.frame)
        self.startPublishedAt.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.startPublishedAt.sizePolicy().hasHeightForWidth())
        self.startPublishedAt.setSizePolicy(sizePolicy)
        self.startPublishedAt.setDateTime(QtCore.QDateTime(QtCore.QDate(2018, 11, 1), QtCore.QTime(0, 0, 0)))
        self.startPublishedAt.setCalendarPopup(True)
        self.startPublishedAt.setObjectName("startPublishedAt")
        self.gridLayout.addWidget(self.startPublishedAt, 2, 1, 1, 1)
        self.endPublishedAt = QtWidgets.QDateEdit(self.frame)
        self.endPublishedAt.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.endPublishedAt.sizePolicy().hasHeightForWidth())
        self.endPublishedAt.setSizePolicy(sizePolicy)
        self.endPublishedAt.setCalendarPopup(True)
        self.endPublishedAt.setObjectName("endPublishedAt")
        self.gridLayout.addWidget(self.endPublishedAt, 3, 1, 1, 1)
        self.verticalLayout.addWidget(self.frame)
        self.options.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_2.addWidget(self.options)
        self.mGroupBox = gui.QgsCollapsibleGroupBox(self.dockWidgetContents)
        self.mGroupBox.setCollapsed(True)
        self.mGroupBox.setObjectName("mGroupBox")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.mGroupBox)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.email = QtWidgets.QLineEdit(self.mGroupBox)
        self.email.setInputMask("")
        self.email.setText("")
        self.email.setClearButtonEnabled(True)
        self.email.setObjectName("email")
        self.verticalLayout_3.addWidget(self.email)
        self.password = gui.QgsPasswordLineEdit(self.mGroupBox)
        self.password.setClearButtonEnabled(True)
        self.password.setShowLockIcon(False)
        self.password.setObjectName("password")
        self.verticalLayout_3.addWidget(self.password)
        self.verticalLayout_2.addWidget(self.mGroupBox)
        self.pushButton = QtWidgets.QPushButton(self.dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout_2.addWidget(self.pushButton)
        DockMapBiomasApi.setWidget(self.dockWidgetContents)

        self.retranslateUi(DockMapBiomasApi)
        QtCore.QMetaObject.connectSlotsByName(DockMapBiomasApi)
        DockMapBiomasApi.setTabOrder(self.pushButton, self.checkBoxStartDetected)
        DockMapBiomasApi.setTabOrder(self.checkBoxStartDetected, self.startDetectedAt)
        DockMapBiomasApi.setTabOrder(self.startDetectedAt, self.checkBoxEndDetected)
        DockMapBiomasApi.setTabOrder(self.checkBoxEndDetected, self.endDetectedAt)
        DockMapBiomasApi.setTabOrder(self.endDetectedAt, self.checkBoxStartPublished)
        DockMapBiomasApi.setTabOrder(self.checkBoxStartPublished, self.startPublishedAt)
        DockMapBiomasApi.setTabOrder(self.startPublishedAt, self.checkBoxEndPublished)
        DockMapBiomasApi.setTabOrder(self.checkBoxEndPublished, self.endPublishedAt)
        DockMapBiomasApi.setTabOrder(self.endPublishedAt, self.options)

    def retranslateUi(self, DockMapBiomasApi):
        _translate = QtCore.QCoreApplication.translate
        DockMapBiomasApi.setWindowTitle(_translate("DockMapBiomasApi", "MapBiomas API"))
        self.BIOME.setDefaultText(_translate("DockMapBiomasApi", "BIOME"))
        self.STATE.setDefaultText(_translate("DockMapBiomasApi", "STATE"))
        self.startDetectedAt.setDisplayFormat(_translate("DockMapBiomasApi", "yyyy-MM-dd"))
        self.endDetectedAt.setDisplayFormat(_translate("DockMapBiomasApi", "yyyy-MM-dd"))
        self.checkBoxEndDetected.setText(_translate("DockMapBiomasApi", "End Detected At"))
        self.checkBoxEndPublished.setText(_translate("DockMapBiomasApi", "End Published At"))
        self.checkBoxStartDetected.setText(_translate("DockMapBiomasApi", "Start Detected At"))
        self.checkBoxStartPublished.setText(_translate("DockMapBiomasApi", "Start Published At"))
        self.startPublishedAt.setDisplayFormat(_translate("DockMapBiomasApi", "yyyy-MM-dd"))
        self.endPublishedAt.setDisplayFormat(_translate("DockMapBiomasApi", "yyyy-MM-dd"))
        self.mGroupBox.setTitle(_translate("DockMapBiomasApi", "LOGIN"))
        self.email.setPlaceholderText(_translate("DockMapBiomasApi", "Email"))
        self.password.setPlaceholderText(_translate("DockMapBiomasApi", "Password"))
        self.pushButton.setText(_translate("DockMapBiomasApi", "SIGN IN"))

from qgis import gui
